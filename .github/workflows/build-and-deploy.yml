name: Cloud Resume API Challenge

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      DYNAMODB_TABLE_NAME: ${{ secrets.TABLE_NAME }}
      TF_CLOUD_ORGANIZATION: ${{ secrets.ORGANIZATION }}
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      TF_WORKSPACE: terraform-github-actions
      CONFIG_DIRECTORY: ./infra

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
  
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.5.0

    - name: Upload Configuration to Terraform Cloud
      uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
      id: plan-upload
      with:
        workspace: ${{ env.TF_WORKSPACE }}
        directory: ${{ env.CONFIG_DIRECTORY }}
        speculative: true

    - name: Create Terraform Plan
      uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
      id: plan-run
      with:
        workspace: ${{ env.TF_WORKSPACE }}
        configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
        plan_only: true

    - name: Get Terraform Plan Output
      uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.0.0
      id: plan-output
      with:
        plan: ${{ fromJSON(steps.plan-run.outputs.payload).data.relationships.plan.data.id }}

    - name: Apply Terraform Plan
      uses: hashicorp/tfc-workflows-github/actions/apply@v1.0.0
      with:
        workspace: ${{ env.TF_WORKSPACE }}
        plan: ${{ fromJSON(steps.plan-output.outputs.payload).data.relationships.plan.data.id }}
        auto_approve: true

    - name: Upload JSON Data to DynamoDB
      run: |
        aws dynamodb put-item \
          --table-name ${{ secrets.TABLE_NAME }} \
          --item file://files/resume.json \
          --region ${{ secrets.AWS_REGION }}
